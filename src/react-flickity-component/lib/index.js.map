{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","flickityReady","carousel","flkty","imagesLoaded","bind","prevProps","prevState","reloadOnUpdate","reloadCells","resize","disableImagesLoaded","instance","options","setState","flickityRef","mountNode","querySelector","children","createElement","elementType","className","ref","c","renderPortal","propTypes","bool","object","string","array","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEMA,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,qBAAe;AADJ,KAAb;;AAIA,UAAKC,QAAL,GAAgB,IAAhB;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AATiB;AAUlB;;;;uCAEkBC,S,EAAWC,S,EAAW;AACvC,UACE,KAAKR,KAAL,CAAWS,cAAX,IACC,CAACD,UAAUN,aAAX,IAA4B,KAAKD,KAAL,CAAWC,aAF1C,EAGE;AACA,aAAKE,KAAL,CAAWM,WAAX;AACA,aAAKN,KAAL,CAAWO,MAAX;AACD;AACD,WAAKN,YAAL;AACD;;;mCAEc;AACb,UAAI,CAAC,KAAKL,KAAL,CAAWY,mBAAZ,mCAAJ,EAAkD;AAChD,oCACE,KAAKT,QADP,EAEE,UAASU,QAAT,EAAmB;AACjB,eAAKT,KAAL,CAAWM,WAAX;AACD,SAFD,CAEEJ,IAFF,CAEO,IAFP,CAFF;AAMD;AACF;;;wCAEmB;AAClB,UAAMH,WAAW,KAAKA,QAAtB;AACA,2CAAe;AACb,aAAKC,KAAL,GAAa,uBAAaD,QAAb,EAAuB,KAAKH,KAAL,CAAWc,OAAlC,CAAb;AACA,aAAKC,QAAL,CAAc,EAAEb,eAAe,IAAjB,EAAd;AACA,YAAI,KAAKF,KAAL,CAAWgB,WAAf,EAA4B;AAC1B,eAAKhB,KAAL,CAAWgB,WAAX,CAAuB,KAAKZ,KAA5B;AACD;AACF;AACF;;;mCAEc;AACb,UAAI,CAAC,KAAKD,QAAV,EAAoB;AAClB,eAAO,IAAP;AACD;AACD,UAAMc,YAAY,KAAKd,QAAL,CAAce,aAAd,CAA4B,kBAA5B,CAAlB;AACA,UAAID,SAAJ,EAAe;AACb,eAAO,4BAAa,KAAKjB,KAAL,CAAWmB,QAAxB,EAAkCF,SAAlC,CAAP;AACD;AACF;;;6BAEQ;AAAA;;AACP,aAAO,gBAAMG,aAAN,CACL,KAAKpB,KAAL,CAAWqB,WADN,EAEL;AACEC,mBAAW,KAAKtB,KAAL,CAAWsB,SADxB;AAEEC,aAAK,gBAAK;AACR,iBAAKpB,QAAL,GAAgBqB,CAAhB;AACD;AAJH,OAFK,EAQL,KAAKC,YAAL,EARK,CAAP;AAUD;;;;;;AAGH1B,kBAAkB2B,SAAlB,GAA8B;AAC5Bd,uBAAqB,oBAAUe,IADH;AAE5BlB,kBAAgB,oBAAUkB,IAFE;AAG5Bb,WAAS,oBAAUc,MAHS;AAI5BN,aAAW,oBAAUO,MAJO;AAK5BR,eAAa,oBAAUQ,MALK;AAM5BV,YAAU,oBAAUW,KANQ;AAO5Bd,eAAa,oBAAUe;AAPK,CAA9B;;AAUAhC,kBAAkBiC,YAAlB,GAAiC;AAC/BpB,uBAAqB,KADU;AAE/BH,kBAAgB,KAFe;AAG/BK,WAAS,EAHsB;AAI/BQ,aAAW,EAJoB;AAK/BD,eAAa;AALkB,CAAjC;;kBAQetB,iB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport Flickity from 'flickity';\nimport imagesloaded from 'imagesloaded';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport PropTypes from 'prop-types';\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n    this.imagesLoaded = this.imagesLoaded.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.reloadOnUpdate ||\n      (!prevState.flickityReady && this.state.flickityReady)\n    ) {\n      this.flkty.reloadCells();\n      this.flkty.resize();\n    }\n    this.imagesLoaded();\n  }\n\n  imagesLoaded() {\n    if (!this.props.disableImagesLoaded && canUseDOM) {\n      imagesloaded(\n        this.carousel,\n        function(instance) {\n          this.flkty.reloadCells();\n        }.bind(this)\n      );\n    }\n  }\n\n  componentDidMount() {\n    const carousel = this.carousel;\n    if (canUseDOM) {\n      this.flkty = new Flickity(carousel, this.props.options);\n      this.setState({ flickityReady: true });\n      if (this.props.flickityRef) {\n        this.props.flickityRef(this.flkty);\n      }\n    }\n  }\n\n  renderPortal() {\n    if (!this.carousel) {\n      return null;\n    }\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) {\n      return createPortal(this.props.children, mountNode);\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: c => {\n          this.carousel = c;\n        },\n      },\n      this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  disableImagesLoaded: PropTypes.bool,\n  reloadOnUpdate: PropTypes.bool,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  elementType: PropTypes.string,\n  children: PropTypes.array,\n  flickityRef: PropTypes.func,\n};\n\nFlickityComponent.defaultProps = {\n  disableImagesLoaded: false,\n  reloadOnUpdate: false,\n  options: {},\n  className: '',\n  elementType: 'div',\n};\n\nexport default FlickityComponent;\n"]}